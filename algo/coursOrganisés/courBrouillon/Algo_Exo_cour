Exercice 5 algo serie de nb val min, val max, la somme, la moyenne ou quitter
algo menu
var n, max, min, somme, moyenne, opération (op chaine de caracteres) entier; 
debut 
    somme:=0; max:=0; i:=1
        repeter 
            ecrire ("saisissez un nombre:");
            lire(n);
            somme:=somme + n;
            Si (n>max) alors max:=n;
            Si (i=1 ou n<min) alors min:= n;
            moyenne:=somme/i;
            i++;
    jusqu'a (n=0);
            %ou somme:= somme /i-1%
        ecrire ("choississez une opération:")
        ecrire ("s: pour somme")
        ecrire ("m: pour moyenne")
        ecrire ("max : pour maximum")
        ecrire ("min : pour minimum")
        lire (op);
            suivant op faire;
            "s" : ecrire (somme);
            "m" : ecrire (moyenne);
            "max" : ecrire (max);
            "min" : ecrire (min);
            sinon ecrire (au revoir);
            FinSuivant
    Fin
_____________________________________________________________________________
exo 5.10 
algo chance
var n : entier 
debut 
    ecrire ("saisir le nb de chevaux partants:");
    lire(n);
    ecrire ("saisir le nb de chevaux joués:");
    lire (p);
    
    //calcul factoriel n (n!)
    fn := 1;
    pour (i:=n; i>=2 ; i--) faire
     fn := fn *1;
         fin_pour
    
    // calcul factoriel p (p!)
    fp:= 1 ;
    pour (i:=p; i>=2 ; i--) faire
     fp := fp*i;
     fin_pour
     
     //Calcul factoriel (n-p!)
     fnp := 1;
    pour (i:=(n-p); i>=2 ; i--)
     fpn := fnp * i 
     fin_pour
     
     x:= fn/ fnp;
     y := fn/ (fp * fnp); y := x / fp;
    ecrire "dans l'ordre vous allez avoir :",1/x);
    ecrire "dans le desordre vous allez avoir :", 1/y);
    
OU
    fp:= 1; 
    pour (i:=p, i>=2, i--) faire 
        fp:= fp*i;
    FinPour
    fn:= fp;
    pour (i:=n; i>p, i--) faire 
    fn:= fn*i;
    FinPour
    
_____________________________________________________________________________
algo suite de chiffre
var i,j;
debut
    Pour (i:=1; i=<10; i++) faire
        Pour (j:=1; j=<11-i; j++) faire          
            ecrire (10-i);
        FinPour
        ecrire ("/n);
    FinPour
Fin
OU      Pour (j:=11-1; j>=1, j--)
OU      Pour (i:=10, i>=1, i--) faire
            pour (j:=1,j>=1,j--) faire 
                ecrire (i-1);
___________________________________________________________________________
 algo jour
 var j, m, a
 debut 
    ecrire ("entrez numero jour (1-31)," j)
    ecrire ("entrez numero mois (1-12)," m)
    ecrire ("entrez numero annee (XXXX)," a)
    Si a%4:=0 et ((a%100>0) ou (a%400=0)) alors
        ecrire ("l'année est bis")
        sinon ecrire ("l'année n'est pas bis")
    Si j>=30 et (m:=4 ; m:=6 ; m:=9 ; m:=11)
        alors ecrire ("date non valide")
        sinon ecrire ("date valide")
    Si (j>31 ou j<0) et (m>12 ou m<0)
        alors ecrire ("date non valide")
    FinSi
    FinSi
    FinSi
Fin
OU 
debut
lire (j,m,a); 
est bisextile = (a%400=0 ou (a%4=0 et a%100!=0)     
    Si (j>31 ou m>12) ou
    m= 2 et ((est bisextile et j>29) ou (!est pas bisextile et j>28)
        ou (m=4 ou m=6 ou m=9 ou m=11) et j>30);
    alors ecrire ("date NV");
    sinon ecrire ("date V");


    ___________________________________________________________________________

    ours Tab 2D
            ex2
1   5       12  8   10
2   4       3   2   16
3   3       1   10  13
4   2       9   12  17  
5   8       1   4   8
            tab(1:5,1:3)
                afficher le 17 
                ecrire tab(4:3)
                
 ____________________________________________
 
algo  note
var tab(1:2;1:3)
    i, som1, moy
    
debut
som := 0
ecrire "saisir etudiant1 et etudiant2)
lire (E1); lire (E2);
Pour i:= 0 à 1 faire
    Pour j:= 0 à 2;
        ecrire ("saisir note");
                lire tab(j) ;
        som:= som + (tab(i,j));
    FinPour
    
    ecrire ("la moyenne de ",(i),"est :", som/3);
FinPour       
Fin
CORRECTION
algo 
var notesclasse(1;2, 1:3) : tableau de réels, 
debut                               //remplissage du tableau de notes 
    Pour (i:=1 à 2) faire
        Pour (j:=1 à 3) faire
            ecrire ("saisissez la note", j," pour etudiant", i,":");
            lire (notesclasse(i,j);
        FinPour
    FinPour
    
                                    // Affichage du tableau de notes
    Pour (k:=1 à 2) faire
        ecrire ("l'etudiant", k," a les suivantes")
            Pour (m:=1 à3) faire
                ecrire ("note",m,":"notesclasse(k,m)
            FinPour
        ecrire ("---------");
    FinPour
    
    Pour (y:=1 à 2) faire                  // Calcul de la moyenne
        somme := 0                              // somme ici pour faire chaque moyenne, sinon au 
        pour (x:=1 à 3) faire                  // dessus du "pour" pour faire la moyenne globale
            somme := somme + notesclasse(y,x)
        finpour
        moyenne := somme/3
        ecrire la moyenne de l'etudiant", y," est de : ", moyenne);
    finpour
fin     

exo 5 fonction recursive
def recursivite(n):
   Si nb > 2:
        retourner n * recursivite(n - 1)
    retourner n
    
CORRECTION 
    
exo 6
algo 
si k = 0 ou 1 alors 
    retourner k 
sinon retourner (k-1) + k-2)
FIBONACCI 
Algo MontantTTC
fonction fibonacci (n :entier) :entier
debut   
    Si (n = 0, alors retourner 0; finSi
    si (n=1) alors retourner 1; finSi
    retourner fibonacci (n-1) + fibonnaci (n-2);
fin 
variable n: entier; 
debut 
    lire(n);
    ecrire ("Resultat:", fibonacci(n));
fin 
_____________________________________________________________________
 
exo 1
fonction nbCaracteres 
(a: string, b : caractere) : entier
debut
    cpt:= 0 
    pour a:= 1 à length(a) faire
        si (a(i)=b) alors cpt := cpt+1; 
        finsi
    finpour
    retourner cpt;
fin
variable 
mot : string; lettre : caractere; cpt : entier
debut
    lire (mot, lettre);
    cpt := nbCaracteres(mot, lettre);
    ecrire ("Pour la phrase:"& mot&", il existe" &cpt&lettre);
fin
_____________________________________________________________________
exo 2 
procedure ordre
debut
    pour a:= 1 à lenght(a) faire
        si (a< a+1) alors permuter (a,a+1)
___________________________________________________________________
exo 3 
fonction nbcaractere
(a: string) : entier
debut
cpt := 0 
    pour a:=1 à lenght(a) faire    
        pour b:= 1 à lenght(b) faire 
            si (b(i)=a) alors cpt := cpt+1;
            i++;
            FinSi 
        finpour
        retourner cpt;
    finpour
fin 
        
variable 
mot :string, lettre : caractere; cpt : entier;
debut 
    lire(mot, lettre)
    cpt:= nbcaractere(a) (mot, lettre)
    ecrire ("Pour la phrase:"&mot&", il existe "&cpt&lettre);
fin


