algo fonction 

exo 1.6 


algo_permute

procedure permuter
var a, var b : entier		a = 1	b=22   			var a=1 	var b =22

var c : entier
debut 
	c := a;					1 =  1					1 = 1
	a := b;					1 = 22					1 = 22	
	b := c;   				22= 1					22 = 1
fin

var a, b : entier        	a=1 	b=22			a=22	b=1
debut
lire(a,b);  				a=1 	b=22 			a=22 	b=1
	permuter (a,b)
fin

_______________________________________________________________________

exo 1.7 

algo_permute

procedure permuter
var a, var b, var c : entier

var d : entier
debut
	d := a;
	a := c;
	c := b;
	b := d;
fin 

var a, b, c : entier
debut
lire(a,b,c)
		permuter (b,a), (c,b), (a,c) 
fin 

_______________________________________________________________________

exo 3.3 

algo_classement

procedure ordre
a, b, c : string   							pas de var (pas de modification)

debut
	si a<b et b>c alors
		ecrire ("dans l'ordre")
		sinon ecrire ("pas dans l'ordre")
	finsi
fin

var a, b ,c : string 
lire (a, b, c);
	dans lordre (a,b,c)
FinSi
Fin 


CORRECTION bis

fonction ordre 		
a, b, c : string   							

debut
	si (a<b et b>c) alors retourner vrai 
					sinon retourner faux
	finsi
fin

var a, b ,c : string 
lire (a, b, c);
	Si dans lordre (a,b,c)
		alors ecrire ("dans l'ordre")
		sinon ecrire ("pas dans l'ordre") 
FinSi
Fin


_______________________________________________________________________

exo 2.3

algo_Tva 

procedure resultat
 a (prix HT), b (nb d'article), c (prix TTC), d (TVA)

fonction calculTTc (a,b,c :réels) 

debut
	variable PT : réel
	PT := a*b+(1+c)
	retourner prixTotal
Fin
debut 
	resultat := calculTTC (a,b,c)
fin	
	
CORRECTION

algo montantTTC
fonction calculMontantTTC (pu :réel, qt : entier, tva :entier) :réel;

debut
retourner pu * qt *(1 + TVA /100); 
fin

variables 
prix :réel ; 
qt, TVA :entier

debut
lire(prix, qt, TVA)
ecrire ("le montant TTC est :", calculMontantTTC (prix, qt, TVA)
fin


	
_______________________________________________________________________

exo 4.8
 
debut
lire (j,m,a); 
est bisextile = (a%400=0 ou (a%4=0 et a%100!=0) 	
	Si (j>31 ou m>12) ou
	m= 2 et ((est bisextile et j>29) ou (!est pas bisextile et j>28)
		ou (m=4 ou m=6 ou m=9 ou m=11) et j>30);
	alors ecrire ("date NV");
	sinon ecrire ("date V");
	
CORRECTION
	
algo année
fonction isdatevalide (j,m,a : entier) : booléen
variable est bisextile : booléen;

debut 
est bisextile : (a%400=0 ou (a%4=0 et a%100!=0)) 
	si (j>31 ou m>12) ou 
	m=2 et ((est bisextile et j>29) ou (!est pas bisextile et j>28)
		ou (m=4 ou m=6 ou m=9 ou m=11) et j>30)
		alors retourner faux
		sinon retourner vrai;
fin

variable j,m,a :entier;
	estbisextile : booléen;
	
debut 
lire(j,m,a);
si (isdatevalide(j,m,a))
	alors ecrire ("date valide)
	sinon ecrire ("date invalide);
fin 
_______________________________________________________________________

exo 5.6

fonction_factorielle
var n : string

debut
		Si (n=1) alors retourner 1
		sinon retourner n * factorielle (n-1);
fin



_______________________________________________________________________

exo 5.9

algo_prix

Fonction rendremonnaie, (argent : entier; montant : entier) : tableau d'entiers
variable Rest : entier; tab(1:3) : tableau d'entiers


debut
	Rest := Argentclient - Montant;
	tab(1) := Rest/10;
	tab(2) := (rest%10)/5
	tab(3) := (Rest%5)
	retourner tab;
fin 

var argent, montant : entier; tab (1:3) tableau d'entiers

debut
	lire(argentclient, montant)
	tab := rendremonnaie (argentclient, montant)
	ecrire ("bd" tab(1) "bc", tab(2)," P tab(3))
fin


_______________________________________________________________________

exo 7.2

algo tab								 		
	var tab(1:N) : tab d'entiers							
		i,min,pos,temp, N : entier 							
													
	Pour i:= 1 à N- 1 faire								
		min:= tab(i); pos:= i							
		pour j:=i+1 à N-1 faire												
			Si (tab(j)) < min) alors				
			min:= tab (j); pos:= j;									
			FinSi										
		FinPour												
			temp := tab(i)												
			tab (i) :=  tab(pos)									
			tab(pos) := temp						
			FinSi											
	FinPour													
	Fin														



Algo tab
Procedure permuter
	variable tab(1:n) : tableau d'entiers
				min, pos : entier;
	
debut
	min : = tab(i), pos := i
	Si tab(j) < min 
	alors min := tab(j) ; pos := j
	Finsi 
fin 

variable tab(i), tab(pos) : tableau d'entiers
debut
	lire tab(i) := tab(pos)
	permuter (tab(i), tab(pos))
fin

_______________________________________________________________________

exo 7.3

debut 							
pour(i=1; i<n; i++)				
 temp:= tab(i);					
 tab(i):= tab(n);					
 tab(n):= temp;						
Finpour							
Fin 							
_______________________________________________________________________
